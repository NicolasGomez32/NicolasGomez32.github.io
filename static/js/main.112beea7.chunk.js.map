{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/features.jsx","components/about.jsx","components/footer.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","type","data-toggle","data-target","href","src","alt","Header","bg","zIndex","position","top","data","title","subtitle","paragraph","action","for","aria-describedby","Features","map","d","i","img","text","About","Why","Why2","Footer","rel","App","SmoothScroll","speed","speedAsDuration","useState","landingPageData","setLandingPageData","useEffect","JsonData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.112beea7.chunk.js","sourcesContent":["export const Navigation = (props) => {\n  return (\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\n      <div className='container'>\n        <div className='navbar-header'>\n          <button\n            type='button'\n            className='navbar-toggle collapsed'\n            data-toggle='collapse'\n            data-target='#bs-example-navbar-collapse-1'\n          >\n            {' '}\n            <span className='sr-only'>Toggle navigation</span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n          </button>\n          <div className='logo-nav'>\n            <a className='navbar-brand page-scroll' href='#page-top'>\n              <img src=\"img/logo.jpg\" alt=\"\" />\n            </a>\n          </div>{' '}\n        </div>\n\n        <div\n          className='collapse navbar-collapse'\n          id='bs-example-navbar-collapse-1'\n        >\n          <ul className='nav navbar-nav navbar-right'>\n            <li>\n              <a href='#features' className='page-scroll'>\n                Responsive page\n              </a>\n            </li>\n            <li>\n              <a href='#features' className='page-scroll'>\n                Experience\n              </a>\n            </li>\n            <li>\n              <a href='#about' className='page-scroll'>\n                About\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n","import ParticlesBg from \"particles-bg\";\n\nexport const Header = (props) => {\n  return (\n    <header id='header'>\n      <div className='intro'>\n        <ParticlesBg type=\"circle\" bg={{ zIndex: 0, position: \"absolute\", top: 0 }} />\n        <div className='overlay'>\n          <div className='container'>\n            <div className='row'>\n              <div className='col-md-4 col-md-offset-1 intro-text'>\n                <h2 className=\"h2-title\">\n                  {props.data ? props.data.title : 'Loading'}\n                  <span></span>\n                </h2>\n                <h3 className=\"h2-title\">\n                  {props.data ? props.data.subtitle : 'Loading'}\n                  <span></span>\n                </h3>\n                <p>{props.data ? props.data.paragraph : 'Loading'}</p>\n                <a\n                  href='#features'\n                  className='btn btn-custom btn-lg page-scroll'\n                >\n                  Learn More\n                </a>{' '}\n              </div>\n              <div className='col-md-4 col-md-offset-2 intro-text'>\n                <h2 className=\"h2-title\">\n                  Contact me\n                  <span></span>\n                </h2>\n                <div className=\"contact-form\">\n                  <form action=\"\">\n                    <div className=\"mb-3\">\n                      <label for=\"name\" className=\"form-label\">Full name</label>\n                      <input type=\"text\" className=\"form-control\" id=\"name\"  />\n                    </div>\n                    <div className=\"mb-3\">\n                      <label for=\"email\" className=\"form-label\">Email address</label>\n                      <input type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" />\n                    </div>\n                    <div className=\"mb-3\">\n                      <label for=\"phone\" className=\"form-label\">Phone</label>\n                      <input type=\"text\" className=\"form-control\" id=\"phone\" aria-describedby=\"emailHelp\" />\n                    </div>\n                  </form>\n                  <button className=\"btn btn-primary btn-block\">Submit</button>\n                </div>\n                {' '}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n","export const Features = (props) => {\n  return (\n    <div id='features' className='text-center'>\n      <div className='container'>\n        <div className='col-md-10 col-md-offset-1 section-title'>\n          <h2>Experience in languages like: </h2>\n        </div>\n        <div className='row'>\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.title}-${i}`} className='col-xs-4 col-md-3'>\n                  {' '}\n                  <img src={d.img} alt='...' className='feature-img'></img>\n                  <h3>{d.title}</h3>\n                  <p>{d.text}</p>\n                </div>\n              ))\n            : 'Loading...'}\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const About = (props) => {\n  return (\n    <div id='about'>\n      <div className='container'>\n        <div className='row'>\n          <div className='col-xs-12 col-md-6'>\n            {' '}\n            <img src='img/about.jpg' className='img-responsive' alt='' />{' '}\n            <a href=\"https://gitlab.com/nicongomez32\">Git Profile !</a>\n          </div>\n          <div className='col-xs-12 col-md-6'>\n            <div className='about-text'>\n              <h2>About Me</h2>\n              <p>I introduce myself, my name is Nicol√°s Gomez, I am 23 years old, I am a web developer, from Mendoza, Argentina.\n              I consider myself a flexible person, always wanting to be learning about different technologies.\nI have worked and studied in different opportunities with technologies like Javascript vanilla, frameworks like VueJs, and libraries like ReactJs, TypeScript on the client side, on the server side NodeJs, with frameworks like Express, technologies like WebSockets, some Machine Learning .</p>\n              <h3>Skills</h3>\n              <div className='list-style'>\n                <div className='col-lg-6 col-sm-6 col-xs-12'>\n                  <ul>\n                    {props.data\n                      ? props.data.Why.map((d, i) => (\n                        <li key={`${d}-${i}`}>{d}</li>\n                      ))\n                      : 'loading'}\n                  </ul>\n                </div>\n                <div className='col-lg-6 col-sm-6 col-xs-12'>\n                  <ul>\n                    {props.data\n                      ? props.data.Why2.map((d, i) => (\n                        <li key={`${d}-${i}`}> {d}</li>\n                      ))\n                      : 'loading'}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const Footer = (props) => {\n  \n  return (\n    <div>\n      <div id='footer'>\n        <div className='container text-center'>\n          <p>\n            &copy; 2020 Issaaf Kattan React Land Page Template. Design by{' '}\n            <a href='http://www.templatewire.com' rel='nofollow'>\n              TemplateWire\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { Navigation } from './components/navigation'\nimport { Header } from './components/header'\nimport { Features } from './components/features'\nimport { About } from './components/about'\nimport { Footer } from './components/footer'\nimport JsonData from './data/data.json'\nimport SmoothScroll from 'smooth-scroll'\n\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 1000,\n  speedAsDuration: true,\n})\n\nconst App = () => {\n  const [landingPageData, setLandingPageData] = useState({})\n  useEffect(() => {\n    setLandingPageData(JsonData)\n  }, [])\n\n  return (\n    <div>\n      <Navigation />\n      <Header data={landingPageData.Header} />\n      <Features data={landingPageData.Features} />\n      <About data={landingPageData.About} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}